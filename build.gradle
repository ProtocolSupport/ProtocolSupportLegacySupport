plugins {
	id 'com.github.johnrengelman.shadow' version '5.0.0'
	id 'java'
}


defaultTasks 'build'


group 'protocolsupport'
version '1.2'


File targetJarDirectory = new File("target")

task setupFolders(type: DefaultTask) {doLast{
	targetJarDirectory.mkdirs()
}}


sourceCompatibility = JavaVersion.VERSION_1_8

sourceSets {
	main {
		java {
			srcDirs = ['src']
		}
		resources {
			srcDirs = ['resources']
		}
	}
}

repositories {
	mavenCentral()
	jcenter()
	maven {
		url 'https://hub.spigotmc.org/nexus/content/repositories/public/'
	}
	maven {
		url 'https://repo.dmulloy2.net/nexus/repository/public/'
	}
	maven {
		url 'https://jitpack.io'
	}
}

dependencies {
	shadow group: 'org.spigotmc', name: 'spigot-api', version: '1.15.1-R0.1-SNAPSHOT'
	shadow group: 'com.comphenix.protocol', name: 'ProtocolLib', version: '4.5.0'
	shadow group: 'com.github.ProtocolSupport', name: 'ProtocolSupport', version: 'a82f2b4627'
}

compileJava {
	doFirst {
	    classpath -= configurations.shadow
	    classpath += configurations.shadow
	}

	options.encoding = 'UTF-8'
	options.incremental = false
}


shadowJar {
	doFirst {
		new File(destinationDir, archiveName).delete()
	}

	from sourceSets.main.java.srcDirs
	from 'LICENSE'

	archiveName = jar.archiveName

	minimize()
}


task postprocessFatJar(type: Zip) {
	File originalJar = new File(shadowJar.destinationDir, shadowJar.archiveName)

	archiveName = shadowJar.archiveName

	from(zipTree(originalJar)) {
        exclude 'META-INF/**'
	}
}


task copyFinalJarToTarget(type: DefaultTask) {doLast{
	java.nio.file.Files.copy(
		postprocessFatJar.archivePath.getAbsoluteFile().toPath(),
		new File(targetJarDirectory, jar.baseName + '.jar').getAbsoluteFile().toPath(),
		java.nio.file.StandardCopyOption.REPLACE_EXISTING
	)
}}


compileJava.dependsOn(clean)
compileJava.dependsOn(setupFolders)
jar.enabled = false
jar.finalizedBy(shadowJar)
shadowJar.finalizedBy(postprocessFatJar)
postprocessFatJar.finalizedBy(copyFinalJarToTarget)
