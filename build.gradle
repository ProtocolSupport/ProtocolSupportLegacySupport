plugins {
	id 'com.github.johnrengelman.shadow' version '7.0.0'
	id 'java'
}


defaultTasks 'build'


group 'protocolsupport'
version '1.17-3'


import java.nio.file.Path
import java.nio.file.Paths
import java.nio.file.Files


Path projectDirectoryPath = projectDir.toPath().toAbsolutePath()


sourceCompatibility = JavaVersion.VERSION_16

sourceSets {
	main {
		java {
			srcDirs = ['src']
		}
		resources {
			srcDirs = ['resources']
		}
	}
}

repositories {
	mavenCentral()
	maven {
		url 'https://hub.spigotmc.org/nexus/content/repositories/public/'
	}
	maven {
		url 'https://repo.dmulloy2.net/nexus/repository/public/'
	}
	maven {
		url 'https://jitpack.io'
	}
}

configurations {
	runtimeDependencies
	compileOnly {
		extendsFrom runtimeDependencies
	}
	testImplementation {
	    extendsFrom runtimeDependencies
	}
}

dependencies {
	runtimeDependencies group: 'com.github.ProtocolSupport', name: 'ProtocolSupport', version: '9035ec07ac'
	runtimeDependencies group: 'org.spigotmc', name: 'spigot-api', version: '1.17-R0.1-SNAPSHOT'
	runtimeDependencies group: 'com.comphenix.protocol', name: 'ProtocolLib', version: '4.5.0'
}

compileJava {
	options.encoding = 'UTF-8'
	options.incremental = false
}


processResources {
    filesMatching('plugin.yml') {
        expand 'version': project.version
    }
}

shadowJar {
	duplicatesStrategy = DuplicatesStrategy.INCLUDE

	archiveClassifier = ''

	from sourceSets.main.java.srcDirs
	from 'LICENSE'

	minimize()
}


task copyFinalJarToTarget(type: DefaultTask) {doLast{
	Path targetJarDirectory = projectDirectoryPath.resolve('target')
	Files.createDirectories(targetJarDirectory)
	Files.copy(
		shadowJar.archiveFile.get().getAsFile().toPath().toAbsolutePath(),
		targetJarDirectory.resolve(shadowJar.archiveBaseName.get() + '.jar'),
		java.nio.file.StandardCopyOption.REPLACE_EXISTING
	)
}}


jar.enabled = false
jar.finalizedBy(shadowJar)
shadowJar.finalizedBy(copyFinalJarToTarget)
